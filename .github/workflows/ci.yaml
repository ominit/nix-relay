name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'main' && github.sha || 'anysha' }}
  cancel-in-progress: true

jobs:
  build-nix-env:
    name: Check Nix Env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Take ownership of /nix/store
        run: sudo chown -R $USER:$USER /nix/store

      - name: Restore Nix Store Cache
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: ${{ runner.os }}-nix-${{ hashFiles('flake.lock') }}
          restore-keys: ${{ runner.os }}-nix-

      - name: Build Nix Flake
        run: nix develop

  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    needs: [build-nix-env]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Take ownership of /nix/store
        run: sudo chown -R $USER:$USER /nix/store

      - name: Restore Nix Store Cache
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: ${{ runner.os }}-server-${{ hashFiles('flake.lock', 'nix-relay/server/mix.lock') }}
          restore-keys: ${{ runner.os }}-server-

      - name: Build Server
        run: nix build .#server -L

  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    needs: [build-server]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Take ownership of /nix/store
        run: sudo chown -R $USER:$USER /nix/store

      - name: Restore Nix Store Cache
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: ${{ runner.os }}-server-${{ hashFiles('flake.lock', 'nix-relay/server/mix.lock') }}
          restore-keys: ${{ runner.os }}-server-

      - name: Test Server
        run: |
          cd server
          nix develop --command bash -c "mix deps.get && mix test"

  build-worker:
    name: Build Worker
    runs-on: ubuntu-latest
    needs: [build-nix-env]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Take ownership of /nix/store
        run: sudo chown -R $USER:$USER /nix/store

      - name: Restore Nix Store Cache
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: ${{ runner.os }}-worker-${{ hashFiles('flake.lock', 'nix-relay/worker/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-worker-

      - name: Build Worker
        run: nix build .#worker -L

  build-client:
    name: Build Client
    runs-on: ubuntu-latest
    needs: [build-nix-env]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Take ownership of /nix/store
        run: sudo chown -R $USER:$USER /nix/store

      - name: Restore Nix Store Cache
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: ${{ runner.os }}-client-${{ hashFiles('flake.lock', 'nix-relay/client/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-client-

      - name: Build Client
        run: nix build .#nixr -L
