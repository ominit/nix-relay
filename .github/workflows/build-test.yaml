name: Build & Test

on:
  push:
  pull_request:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Cache Nix store
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/nix
            /nix/store
          key: ${{ runner.os }}-nix-${{ hashFiles('**/flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-nix-

      - name: Cache Mix dependencies
        uses: actions/cache@v3
        with:
          path: |
            nix-relay/server/deps
            nix-relay/server/_build
          key: ${{ runner.os }}-mix-${{ hashFiles('nix-relay/server/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Elixir dependencies
        run: |
          cd nix-relay
          nix develop --command bash -c "cd server && mix deps.get"

      - name: Check formatting
        run: |
          cd nix-relay
          nix develop --command bash -c "cd server && mix format --check-formatted"

      - name: Run tests
        run: |
          cd nix-relay
          nix develop --command bash -c "cd server && mix test"

      - name: Build worker
        run: |
          cd nix-relay
          nix develop --command bash -c "cd worker && cargo build --release"

      - name: Build client
        run: |
          cd nix-relay
          nix develop --command bash -c "cd client && cargo build --release"
